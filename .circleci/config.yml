version: 2.1
jobs:
  build:
    shell: /bin/bash --login -eo pipefail

    macos:
      xcode: '11.5.0'

    steps:
    - checkout

    - run:
        name: Setup for builds
        command: |
          mkdir -p 'test-results'
          mkdir -p 'artifacts'

# TODO (gwhelanld): Consider adding additional build tests for different device architectures

    - run:
        name: Build & Test on macOS Simulator
        command: xcodebuild test -scheme 'LDSwiftEventSource' -sdk macosx -destination 'platform=macOS' | tee 'artifacts/raw-logs-macosx.txt' | xcpretty -r junit -o 'test-results/platform-macosx/junit.xml'
        when: always

    - run:
        name: Build Tests for iOS device
        command: xcodebuild build-for-testing -scheme 'LDSwiftEventSource' -sdk iphoneos CODE_SIGN_IDENTITY= | tee 'artifacts/raw-logs-iphoneos.txt' | xcpretty
        when: always

    - run:
        name: Build & Test on iOS Simulator
        command: xcodebuild test -scheme 'LDSwiftEventSource' -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8,OS=12.2' CODE_SIGN_IDENTITY= | tee 'artifacts/raw-logs-iphonesimulator.txt' | xcpretty -r junit -o 'test-results/platform-iphonesimulator/junit.xml'
        when: always

    - run:
        name: Build Tests for tvOS device
        command: xcodebuild build-for-testing -scheme 'LDSwiftEventSource' -sdk appletvos CODE_SIGN_IDENTITY= | tee 'artifacts/raw-logs-appletvos.txt' | xcpretty
        when: always

    - run:
        name: Build & Test on tvOS Simulator
        command: xcodebuild test -scheme 'LDSwiftEventSource' -sdk appletvsimulator -destination 'platform=tvOS Simulator,name=Apple TV' | tee 'artifacts/raw-logs-appletvsimulator.txt' | xcpretty -r junit -o 'test-results/platform-appletvsimulator/junit.xml'
        when: always

    - run:
        name: Build for watchOS simulator # No XCTest testing on watchOS
        command: xcodebuild build -scheme 'LDSwiftEventSource' -sdk watchsimulator | tee 'artifacts/raw-logs-watchsimulator.txt' | xcpretty
        when: always

    - run:
        name: Build for watchOS device # No XCTest testing on watchOS
        command: xcodebuild build -scheme 'LDSwiftEventSource' -sdk watchos | tee 'artifacts/raw-logs-watchos.txt' | xcpretty
        when: always

    - run:
        name: Build & Test with swiftpm
        command: swift test -v 2>&1 | tee 'artifacts/raw-logs-swiftpm.txt' | xcpretty -r junit -o 'test-results/swiftpm/junit.xml'
        when: always

    - store_test_results:
        path: test-results

    - store_artifacts:
        path: artifacts

  build_linux:
    shell: /bin/bash --login -eo pipefail

    docker:
      - image: norionomura/swift:latest

    steps:
    - checkout

    - run:
        name: apt-get update
        command: apt-get update -y

    - run:
        name: Install Ruby
        command: apt-get install rubygems-integration

    - run:
        name: Install xcpretty
        command: gem install xcpretty

    - run:
        name: Setup for builds
        command: |
          mkdir -p 'test-results'
          mkdir -p 'artifacts'

    - run:
        name: Build & Test with swiftpm
        command: swift test -v 2>&1 | tee 'artifacts/raw-logs-swiftpm-linux.txt' | xcpretty -r junit -o 'test-results/swiftpm-linux/junit.xml'

    - store_test_results:
        path: test-results

    - store_artifacts:
        path: artifacts

workflows:
  version: 2

  build:
    jobs:
      - build
      - build_linux